imports:
  - { resource: parameters.yaml }

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true
    bind:
      # any service asking for a LoggerInterface will get Monolog
      Psr\Log\LoggerInterface: '@Monolog\Logger'

  Devops\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  _instanceof:
    # apply tags to necessary services
    Symfony\Component\Console\Command\Command:
      tags: ['console.command']

  # Support functionality for assisting in output display preferences.
  Devops\Display\DateTimeZone:
    class: DateTimeZone
    arguments: ['%display.datetime.timezone%']
  # Additional custom wiring for auto-wired objects.
  Devops\Command\ReleaseCreateCommand:
    calls:
      - [setDateTimeZone, ['@Devops\Display\DateTimeZone']]
      - [setDateTimeFormat, ['%display.datetime.format%']]
  Devops\Command\ReleaseListCommand:
    calls:
      - [setDateTimeZone, ['@Devops\Display\DateTimeZone']]
      - [setDateTimeFormat, ['%display.datetime.format%']]
  Devops\EventListener\LoggingListener:
    tags:
      - { name: console.event_listener, event: !php/const Symfony\Component\Console\ConsoleEvents::COMMAND,   method: logCommandName }
      - { name: console.event_listener, event: !php/const Symfony\Component\Console\ConsoleEvents::TERMINATE, method: logCommandStatus }

  ### DOCTRINE
  Doctrine\ORM\Configuration:
    factory: [Doctrine\ORM\Tools\Setup, createAnnotationMetadataConfiguration]
    arguments:
      - ['%doctrine.orm.entity_dir%']
      - '%doctrine.orm.dev_mode%'
      - '%doctrine.orm.proxy_dir%'
      - ~
      - '%doctrine.orm.use_simple_annotation_reader%'
  Doctrine\ORM\EntityManager:
    factory: [Doctrine\ORM\EntityManager, create]
    arguments:
      - '%doctrine.orm.connection%'
      - '@Doctrine\ORM\Configuration'
  ### MONOLOG
  Monolog\Logger:
    arguments:
      - main
    calls:
      - [pushHandler,   [!service { class: Monolog\Handler\PsrHandler,
                                    arguments: ['@Symfony\Component\Console\Logger\ConsoleLogger'] }]]
      - [pushHandler,   [!service { class: Monolog\Handler\StreamHandler,
                                    arguments: ['%log_file_path%', '%log_file_verbosity%'] }]]
      - [pushProcessor, [!service { class: Monolog\Processor\UidProcessor }]]
  Symfony\Component\Console\Logger\ConsoleLogger:
    arguments:
      - '@Symfony\Component\Console\Output\ConsoleOutput'
  ### SYMFONY CONSOLE APPLICATION HELPERS
  Symfony\Component\Console\Output\ConsoleOutput: ~
